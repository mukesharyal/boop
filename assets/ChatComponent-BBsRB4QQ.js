import{r as a,C as b,j as x}from"./index-HII9jpe8.js";const B="_chatContainer_26ghi_1",W={chatContainer:B},q="_textMessage_5bslx_1",A="_receivedMessage_5bslx_12",D="_hasReaction_5bslx_12",F="_sentMessage_5bslx_16",G="_reactionList_5bslx_20",K="_topMessage_5bslx_29",Q="_bottomMessage_5bslx_34",U="_sending_5bslx_54",V="_reaction_5bslx_20",c={textMessage:q,receivedMessage:A,hasReaction:D,sentMessage:F,reactionList:G,topMessage:K,bottomMessage:Q,sending:U,reaction:V},R=["👍","❤️","😆","😮","😢","😡"];function Z({origin:d,content:h,reaction:r,prevMessage:f,nextMessage:l,status:i,receivedId:e}){const n=a.useRef(null),t=a.useRef(null),u=(s,o)=>{let g={type:"reaction",id:s,reaction:o};L.current.send(JSON.stringify(g))},{dataChannel:L}=a.useContext(b),[v,y]=a.useState({x:0,y:0}),[T,k]=a.useState({x:0,y:0}),[p,_]=a.useState(!1),[C,M]=a.useState(!1),S=s=>{C||(y({x:s.clientX,y:s.clientY-30}),M(!0)),_(!0)},w=()=>{_(!1),M(!1)},$=s=>{const o=s.touches[0];t.current=setTimeout(()=>{C||(y({x:o.clientX,y:o.clientY-50}),M(!0),_(!0))},500)},j=()=>{clearTimeout(t.current)},I=()=>{clearTimeout(t.current),p&&(_(!1),M(!1))};return a.useLayoutEffect(()=>{if(p&&n.current){const{x:s,y:o}=v,{width:g,height:E}=n.current.getBoundingClientRect(),m=16,N=s-g/2,P=o,Y=m,J=window.innerWidth-g-m,O=m,H=window.innerHeight-E-m,X=Math.min(Math.max(N,Y),J),z=Math.min(Math.max(P,O),H);k({x:X,y:z})}},[p,v]),a.useEffect(()=>()=>clearTimeout(t.current),[]),x.jsxs("div",{...d==="received"&&{onMouseEnter:S,onMouseLeave:w,onTouchStart:$,onTouchMove:j,onTouchEnd:I,onTouchCancel:I},className:`
        ${c.textMessage}
        ${i==="sending"?c.sending:c.sent}
        ${d==="sent"?c.sentMessage:c.receivedMessage}
        ${(l==null?void 0:l.origin)===d?c.topMessage:""}
        ${(f==null?void 0:f.origin)===d?c.bottomMessage:""}
        ${r?c.hasReaction:""}
      `,children:[h,p&&x.jsx("ul",{ref:n,className:c.reactionList,style:{position:"fixed",left:`${T.x}px`,top:`${T.y}px`,zIndex:1e3},children:R.map((s,o)=>x.jsx("li",{onClick:()=>{u(e,o)},children:s},o))}),r&&x.jsx("span",{className:c.reaction,children:R[r]})]})}function te({messages:d,setMessages:h}){const{dataChannel:r,sentId:f,receivedId:l}=a.useContext(b);return console.log("The data channel here is",r),r.current.onmessage=i=>{let e=JSON.parse(i.data);if(console.log("The message I received looks like this: ",e),e.type==="text"){let n={receivedId:l.current,type:e.type,origin:"received",reaction:null,content:e.content};console.log("Message received!");let t={type:"ack",sentId:l.current};r.current.send(JSON.stringify(t)),l.current=l.current+1,h(u=>[...u,n])}else if(e.type==="ack")console.log("I have received an ack message: ",e),h(n=>n.map(t=>t.sentId===e.sentId?{...t,status:"sent"}:t)),f.current=f.current+1;else if(e.type==="reaction"){console.log("I have received a reaction message: ",e);let n={type:"ackReaction",sentId:e.id,reaction:e.reaction};r.current.send(JSON.stringify(n)),h(t=>t.map(u=>u.sentId===e.id?{...u,reaction:e.reaction}:u)),console.log(d)}else e.type==="ackReaction"&&(console.log("I have received an ackReaction message: ",e),h(n=>n.map(t=>t.receivedId===e.sentId?{...t,reaction:e.reaction}:t)))},x.jsx("div",{className:W.chatContainer,children:d.map((i,e,n)=>x.jsx(Z,{receivedId:i.receivedId,status:i.status,origin:i.origin,content:i.content,reaction:i.reaction,prevMessage:n[e-1],nextMessage:n[e+1]},e))})}export{te as default};
